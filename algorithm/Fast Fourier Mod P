
# -*- coding: utf-8 -*-

p,n,w = [5,4,3]
a = [0,4,3,2]

res = []
b = []

def helper(a,b,c):
        if b == 0:
            return 1
        if b == 1:
            return a
        ele = helper(a,b/2,c)
        if b % 2 == 0:
            return ((ele % c) * ele) % c
        else:
            return (ele * (ele * a) % c ) % c
#快速幂方法        
def powerMod(a,b,c):
        if b < 0 :
            return 1.0/helper(a,b,c)
        else:
            return helper(a,b,c)




for item in a:
    b.append(item%p)
for i in range(1,n+1):
    if i == 1:
        temp = sum(b) % p
        res.append(str(temp))
        continue
    base_factor_0 = 1
    temp = 0
    temp += (b[0]*base_factor_0) % p
    #这里使用快速幂求第一个开始的值
    base_factor = powerMod(w,i-1,p)
    factor = base_factor
    for j in range(1,len(a)):
        temp += b[j]*factor % p
        #print str(((b[j])*(factor)) % p) + "- ---  ----"+str(factor)
        #这里keep一个乘法因子，每次都乘以下一个乘法因子
        factor = factor* base_factor % p % p
    res.append(str(temp%p))


print " ".join(res)
